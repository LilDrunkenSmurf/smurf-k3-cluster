---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: &name headscale-secret
spec:
  secretStoreRef:
    name: bitwarden-secrets-manager
    kind: ClusterSecretStore
  refreshInterval: 15m
  target:
    name: *name
    template:
      engineVersion: v2
      data:
        config.yaml: |
          server_url: https://headscale.${SECRET_DOMAIN}
          listen_addr: 0.0.0.0:8080
          metrics_listen_addr: 0.0.0.0:9090
          # disable TLS - nginx handles it
          tls_cert_path: ""
          tls_key_path: ""
          private_key_path: /var/lib/headscale/private.key
          noise:
            private_key_path: /var/lib/headscale/noise_private.key
          prefixes:
            # These are the Tailscale defaults
            v6: fd7a:115c:a1e0::/48
            v4: 100.64.0.0/10
          derp:
            server:
              enabled: false
            urls:
              - https://controlplane.tailscale.com/derpmap/default
            auto_update_enabled: true
            update_frequency: 24h
          disable_check_updates: true
          ephemeral_node_inactivity_timeout: 30m
          database:
            type: sqlite
            sqlite:
              path: /var/lib/headscale/db.sqlite
              write_ahead_log: true
          db_type: sqlite3
          db_path: /var/lib/headscale/db.sqlite
          dns:
            magic_dns: true
            base_domain: headscale.internal
            # List of DNS servers to expose to clients.
            nameservers:
              - 10.69.1.1
            search_domains: []
          log:
            level: info
          policy:
            path: /etc/headscale/policy.json
          oidc:
            only_start_if_oidc_is_available: true
            issuer: https://sso.${SECRET_DOMAIN}/application/o/headscale/
            client_id: {{ .HEADSCALE_CLIENT_ID }}
            client_secret: {{ .HEADSCALE_CLIENT_SECRET }}
            scope: ["openid", "profile", "email"]
            allowed_groups:
              - Headscale
            strip_email_domain: true
        policy.json: |
          {
            "tagOwners": {
              "tag:k8s": ["kubernetes"],
            },
            "autoApprovers": {
              "routes": {
                "10.69.1.0/22": ["tag:k8s"],
              },
              "exitNode": ["tag:k8s"],
            }
          }
  dataFrom:
  - extract:
      key: headscale
