# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app gatus
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      gatus:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-config:
            image:
              repository: ghcr.io/kiwigrid/k8s-sidecar
              tag: 1.29.0@sha256:38907bdecffcc545e838723049cbfe0bc4c10f905b4eedf946be369328249871
            env:
              FOLDER: /config
              LABEL: gatus.io/enabled
              NAMESPACE: ALL
              RESOURCE: both
              UNIQUE_FILENAMES: true
              METHOD: WATCH
            restartPolicy: Always
            resources: &resources
              requests:
                cpu: 10m
              limits:
                memory: 256Mi
        containers:
          app:
            image:
              repository: twinproduction/gatus
              tag: experimental
              # repository: ghcr.io/twin/gatus
              # tag: v5.12.1@sha256:3cc4e90534c05599f07fbdf15580401aa7771fac15f51d1dc8f7de265d70d12f
            env:
              TZ: ${TIMEZONE}
              GATUS_CONFIG_PATH: /config
              GATUS_DELAY_START_SECONDS: 5
              WEB_PORT: &port 80
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
              sysctls:
              - name: net.ipv4.ping_group_range
                value: 0 65536
            resources: *resources
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 100
        fsGroup: 65534
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    serviceMonitor:
      app:
        serviceName: *app
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
            metricRelabelings:
              - action: labeldrop
                regex: (pod)
              - action: replace
                sourceLabels: ["service"]
                targetLabel: instance
    ingress:
      app:
        className: external
        hosts:
          - host: status-utility.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    serviceAccount:
      create: true
      name: *app
    persistence:
      config:
        type: emptyDir
      config-file:
        type: configMap
        name: gatus-configmap
        globalMounts:
          - path: /config/config.yaml
            subPath: config.yaml
            readOnly: true
